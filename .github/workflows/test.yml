name: Run Tests

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Check code formatting
        run: |
          cd backend
          npm run format:check || true

      - name: Run linter
        run: |
          cd backend
          npm run lint || true

      - name: Run unit tests
        run: |
          cd backend
          npm test -- --coverage || true

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./backend/coverage
          flags: backend
          name: backend-coverage

  sdk-tests:
    name: SDK Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd sdk
          npm ci

      - name: Build SDK
        run: |
          cd sdk
          npm run build

      - name: Run tests
        run: |
          cd sdk
          npm test || true

      - name: Test SDK installation
        run: |
          cd /tmp
          npm init -y
          npm install $GITHUB_WORKSPACE/sdk
          node -e "const { Mobi360Client } = require('@mobi360/sdk'); console.log('SDK loaded successfully');"

  api-integration-tests:
    name: API Integration Tests
    runs-on: ubuntu-latest
    services:
      mockserver:
        image: mockserver/mockserver:latest
        ports:
          - 1080:1080
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Run API tests
        env:
          API_BASE_URL: http://localhost:1080
          TWILIO_ACCOUNT_SID: ACtest123
          TWILIO_AUTH_TOKEN: testtoken123
          TWILIO_PHONE_NUMBER: +15551234567
        run: |
          cd backend/tests
          npm run test:api || true

  voice-webhook-tests:
    name: Voice Webhook Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Test Twilio webhooks
        run: |
          cd backend
          npm ci
          
          # Start local server for testing
          npm run dev &
          SERVER_PID=$!
          sleep 5
          
          # Test incoming call webhook
          curl -X POST http://localhost:8787/api/voice/incoming \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "From=%2B81901234567&To=%2B19592105018&CallSid=CAtest123" \
            -s | grep -q "<Response>" || exit 1
          
          # Test speech processing webhook
          curl -X POST http://localhost:8787/api/voice/process-speech \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "SpeechResult=東京駅&Confidence=0.95&CallSid=CAtest123" \
            -s | grep -q "東京駅" || exit 1
          
          kill $SERVER_PID

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: |
          cd backend
          npm audit --audit-level=high || true
          
          cd ../sdk
          npm audit --audit-level=high || true

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD